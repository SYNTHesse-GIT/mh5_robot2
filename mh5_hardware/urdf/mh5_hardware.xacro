<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="mh5_hardware" params="name use_mock_hardware">

    <ros2_control name="upper_body" type="system">
      <xacro:unless value="${use_mock_hardware}">
        <hardware>
          <plugin>mh5_hardware/MH5DynamixelBus</plugin>
          <param name="debug">no</param>
          <param name="port">/dev/ttySC0</param>
          <param name="baudrate">2000000</param>
          <param name="protocol">2.0</param>
          <param name="rs485">yes</param>
        </hardware>
      </xacro:unless>

      <joint name="l_sho_p">
        <state_interface name="position"/>
        <state_interface name="velocity"/>
        <state_interface name="load"/>
      </joint>
      <!-- <xacro:if value="${use_mock_hardware}">
        <hardware>
          <plugin>mock_components/GenericSystem</plugin>
          <param name="calculate_dynamics">true</param>
        </hardware>
      </xacro:if> -->

      <!-- <xacro:macro name="wheel_joint" params="side pin_p pin_n">
        <joint name="${side}_wheel_joint">
          <command_interface name="velocity"/>
          <command_interface name="max_velocity"/>
          <state_interface name="velocity"/>
          <param name="pin_p">${pin_p}</param>
          <param name="pin_n">${pin_n}</param>
          <param name="model">MotorHBridgeNoecoder</param>
          <param name="max_velocity">19.8962</param>
        </joint>
      </xacro:macro> -->

      <!-- <xacro:macro name="button" params="id">
        <gpio name="button_${id}">
          <state_interface name="pressed"/>
          <state_interface name="led"/>
          <command_interface name="reset"/>
          <command_interface name="led"/>
        </gpio>
      </xacro:macro> -->

      <!-- <xacro:macro name="rgb_led" params="id">
        <gpio name="led_${id}">
          <command_interface name="red"/>
          <command_interface name="green"/>
          <command_interface name="blue"/>
        </gpio>
      </xacro:macro> -->
<!-- 
      <xacro:wheel_joint side="left" pin_p="11" pin_n="8" />
      <xacro:wheel_joint side="right" pin_p="10" pin_n="9" />       -->

      <!-- <sensor name="ultrasonic">
        <command_interface name="offset">
          <param name="initial_value">190000</param>
          <param name="min">10000</param>
          <param name="max">500000</param>
        </command_interface>
        <command_interface name="timeout">
          <param name="initial_value">50</param>
        </command_interface>
        <command_interface name="samples">
          <param name="initial_value">10</param>
        </command_interface>
        <state_interface name="distance"/>
        <param name="pin_trigger">13</param>
        <param name="pin_echo">25</param>
      </sensor> -->



      <!-- <xacro:button id="a" />
      <xacro:button id="b" />
      <xacro:button id="x" />
      <xacro:button id="y" /> -->

      <!-- <xacro:rgb_led id="front_left" />
      <xacro:rgb_led id="front_right" />
      <xacro:rgb_led id="middle_left" />
      <xacro:rgb_led id="middle_right" />
      <xacro:rgb_led id="back_left" />
      <xacro:rgb_led id="back_right" /> -->

    </ros2_control>

    <!-- <ros2_control name="imu" type="sensor">
      <hardware>
        <plugin>tri_hardware/TrilobotIMU20948Hardware</plugin>
        <param name="debug">no</param>
        <param name="i2c_bus">1</param>
        <param name="i2c_address">0x68</param>
      </hardware>
      <sensor name="imu">
        <state_interface name="orientation.x"/>
        <state_interface name="orientation.y"/>
        <state_interface name="orientation.z"/>
        <state_interface name="linear_acceleration.x"/>
        <state_interface name="linear_acceleration.y"/>
        <state_interface name="linear_acceleration.z"/>
        <state_interface name="angular_velocity.x"/>
        <state_interface name="angular_velocity.y"/>
        <state_interface name="angular_velocity.z"/>
      </sensor>
    </ros2_control> -->

  </xacro:macro>

</robot>